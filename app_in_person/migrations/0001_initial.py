# Generated by Django 3.2.25 on 2025-08-20 09:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='InPersonOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=100)),
                ('tutor_payout_per_hour', models.DecimalField(decimal_places=2, max_digits=6)),
                ('number_of_sessions', models.PositiveIntegerField()),
                ('session_duration_hours', models.DecimalField(decimal_places=1, max_digits=4)),
                ('total_payout', models.DecimalField(decimal_places=2, max_digits=8)),
                ('status', models.CharField(choices=[('sent', 'Offer Sent'), ('accepted', 'Accepted by Tutor'), ('declined', 'Declined by Tutor'), ('expired', 'Offer Expired')], default='sent', max_length=20)),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
                ('accept_token', models.CharField(max_length=50, unique=True)),
                ('decline_token', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='InPersonService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('category', models.CharField(choices=[('individual', 'Individual Classes'), ('group', 'Group Classes'), ('business', 'Business & Corporate Training'), ('exam', 'Exam Preparation (IELTS, TOEFL, etc.)'), ('conversation', 'Conversation Practice'), ('kids_teens', 'For Kids & Teens'), ('academic', 'Academic Writing & Support'), ('specialized', 'Specialized English (Medical, Legal, etc.)')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('student_price_per_hour', models.DecimalField(decimal_places=2, max_digits=6)),
                ('tutor_payout_per_hour', models.DecimalField(decimal_places=2, max_digits=6)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'In-Person Service & Pricing',
            },
        ),
        migrations.CreateModel(
            name='InPersonRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_notes', models.TextField(blank=True, help_text='Specific learning goals or requirements')),
                ('preferred_start_date', models.DateField()),
                ('number_of_sessions', models.PositiveIntegerField(default=1)),
                ('session_duration_hours', models.DecimalField(decimal_places=1, default=1.5, max_digits=4)),
                ('status', models.CharField(choices=[('searching', 'Searching for Tutor'), ('offer_sent', 'Offers Sent to Tutors'), ('accepted', 'Accepted by Tutor'), ('confirmed', 'Confirmed by Student'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='searching', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('accepted_offer', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='accepted_request', to='app_in_person.inpersonoffer')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='requests', to='app_in_person.inpersonservice')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='in_person_requests', to=settings.AUTH_USER_MODEL, verbose_name='Student')),
            ],
        ),
        migrations.AddField(
            model_name='inpersonoffer',
            name='request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offers', to='app_in_person.inpersonrequest'),
        ),
        migrations.AddField(
            model_name='inpersonoffer',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='in_person_offers', to=settings.AUTH_USER_MODEL, verbose_name='Tutor'),
        ),
        migrations.AlterUniqueTogether(
            name='inpersonoffer',
            unique_together={('request', 'user')},
        ),
    ]
